# Generated by Django 2.0.7 on 2018-12-07 21:22

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        ('accounts', '0003_institution_profile'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('date_of_birth', models.DateField(verbose_name='data de nascimento')),
                ('graduation', models.CharField(choices=[('FD', 'Ensino Fundamental'), ('MD', 'Ensino Médio'), ('SP', 'Ensino Superior'), ('OT', 'Outros')], default='OT', max_length=10, verbose_name='escolaridade')),
                ('gender', models.CharField(choices=[('F', 'Feminino'), ('M', 'Masculino'), ('OT', 'Outros')], default='OT', max_length=20, verbose_name='gênero')),
                ('is_volunteer', models.BooleanField(default=False, verbose_name='voluntario')),
                ('profile_image', models.SmallIntegerField(default=1, verbose_name='imagem do perfil')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='accounts/img', verbose_name='image')),
                ('is_principal', models.BooleanField(default=False, verbose_name='diretor de IE')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='UUID')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'usuarios',
                'verbose_name_plural': 'usuarios',
                'ordering': ['username'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='nome da IE')),
                ('postal_code', models.CharField(max_length=128, verbose_name='CEP')),
                ('city', models.CharField(max_length=128, verbose_name='cidade')),
                ('street', models.CharField(max_length=128, verbose_name='logradouro')),
                ('number', models.IntegerField(verbose_name='número')),
                ('observation', models.CharField(blank=True, max_length=128, null=True, verbose_name='observacoes')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email de contato')),
                ('phone', models.CharField(blank=True, max_length=128, null=True, verbose_name='telefone de contato')),
            ],
            options={
                'verbose_name': 'instituição',
                'verbose_name_plural': 'instituições',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='institution',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.Institution', verbose_name='instituição'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
